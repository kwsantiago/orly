<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AIAssistantCustomInstructionsStorage">
    <option name="instructions">
      <map>
        <entry key="AIAssistant.VCS.GenerateCommitMessage">
          <value>
            <AIAssistantStoredInstruction>
              <option name="actionId" value="AIAssistant.VCS.GenerateCommitMessage" />
              <option name="content" value="write a brief first line summarising the changes, and then follow up with a set of hyphen prefixed bullet points listing the detail of each of the changes either grouped by category or grouped by a source file in one sentence" />
            </AIAssistantStoredInstruction>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="848aca24-a3ec-4e50-a3d5-7b132d168000" name="Changes" comment="Refactor event handling and improve error handling&#10;&#10;- **database/query-events.go**: Replace `return` statements with `continue` to ensure error scenarios do not interrupt the loop and allow processing of subsequent events.&#10;- **server/add-event.go**: Add support for logging ephemeral events and prevent saving them unnecessarily to optimize storage and improve traceability.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/socketapi/handleEvent.go" beforeDir="false" afterPath="$PROJECT_DIR$/socketapi/handleEvent.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/socketapi/handleReq.go" beforeDir="false" afterPath="$PROJECT_DIR$/socketapi/handleReq.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/socketapi/publisher.go" beforeDir="false" afterPath="$PROJECT_DIR$/socketapi/publisher.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/socketapi/socketapi.go" beforeDir="false" afterPath="$PROJECT_DIR$/socketapi/socketapi.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
      <option value="repository" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.24.4" />
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoVcsConfiguration">
    <option name="GO_FMT" value="false" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2zNVfvqcHFFZtiw7fVA42Kf3QlH" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build github.com/mleku/realy.lol.executor": "Run",
    "Go Build.go build not.realy.lol.executor": "Run",
    "Go Build.go build orly.dev/event/examples/filter.executor": "Run",
    "Go Build.go build sample.go.executor": "Run",
    "Go Test.TestFromCanonical in orly.dev/event.executor": "Run",
    "Go Test.TestGenerateIndexes in not.realy.lol/database.executor": "Run",
    "Go Test.TestGetIndexesForEvent in orly.dev/database.executor": "Run",
    "Go Test.TestGetIndexesForEvent/BasicEvent in orly.dev/database.executor": "Run",
    "Go Test.TestGetIndexesFromFilter in orly.dev/database.executor": "Run",
    "Go Test.TestQueryEventsIntersection in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForAuthorsTags in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForCreatedAt in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForIds in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForKinds in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForKindsAuthors in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForKindsAuthorsTags in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForKindsTags in orly.dev/database.executor": "Run",
    "Go Test.TestQueryForTags in orly.dev/database.executor": "Run",
    "Go Test.TestSaveEvents in orly.dev/database.executor": "Run",
    "Go Test.TestT in not.realy.lol/database/indexes/types.executor": "Run",
    "Go Test.TestTMarshalBinary_UnmarshalBinary in orly.dev/event.executor": "Run",
    "Go Test.go test not.realy.lol/database/indexes.executor": "Run",
    "Go Test.go test not.realy.lol/database/indexes/types.executor": "Run",
    "Go Test.go test orly.dev/database.executor": "Run",
    "Go Test.go test orly.dev/database/indexes.executor": "Run",
    "Go Test.go test orly.dev/event.executor": "Run",
    "Go Test.gobench not.realy.lol/codecbuf.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.GoLinterPluginOnboarding": "true",
    "RunOnceActivity.GoLinterPluginStorageMigration": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "SHELLCHECK.PATH": "/home/david/.local/share/JetBrains/GoLand2025.1/Shell Script/shellcheck",
    "git-widget-placeholder": "test1",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "/home/david/src/orly.dev",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "junie.project.settings"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/database" />
      <recent name="$PROJECT_DIR$/server" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/interfaces" />
      <recent name="$PROJECT_DIR$/database" />
      <recent name="$PROJECT_DIR$/socketapi" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/interfaces" />
      <recent name="$PROJECT_DIR$/event/examples" />
      <recent name="$PROJECT_DIR$/event/examples/filter" />
      <recent name="$PROJECT_DIR$/database/indexes/types" />
      <recent name="$PROJECT_DIR$/database" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestQueryEventsIntersection in orly.dev/database">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestQueryEventsIntersection in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestQueryEventsIntersection\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestQueryForAuthorsTags in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestQueryForAuthorsTags\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestQueryForCreatedAt in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestQueryForCreatedAt\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSaveEvents in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSaveEvents\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestQueryEventsIntersection in orly.dev/database" />
        <item itemvalue="Go Test.go test orly.dev/database" />
        <item itemvalue="Go Test.TestQueryForAuthorsTags in orly.dev/database" />
        <item itemvalue="Go Test.TestSaveEvents in orly.dev/database" />
        <item itemvalue="Go Test.TestQueryForCreatedAt in orly.dev/database" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-3b128438d3f6-07d2d2d66b1e-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-251.26927.50" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="848aca24-a3ec-4e50-a3d5-7b132d168000" name="Changes" comment="" />
      <created>1751571624698</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751571624698</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="remove all indexes that don't end in a timestamp" />
    <MESSAGE value="handle `Until` filter in `GetIndexesFromFilter` and update tests" />
    <MESSAGE value="migrate `codec` package to `interfaces/codec` and update imports across the project" />
    <MESSAGE value="refactor `GetIndexesFromFilter` and related index encodings to simplify serialization logic; add comprehensive event index tests" />
    <MESSAGE value="change filter indexes to be pairs with created_at ranges" />
    <MESSAGE value="partly implemented query for ids" />
    <MESSAGE value="log event processing duration and throughput in save-event test" />
    <MESSAGE value="added comprehensive tests for QueryForIds" />
    <MESSAGE value="Ensure data directory creation in `database.go` using `os.MkdirAll` and `apputil.EnsureDir`." />
    <MESSAGE value="Refactor `QueryForIds`: migrate to `IdPkTs` struct, improve timestamp filtering, and optimize index lookups." />
    <MESSAGE value="Improve timestamp filtering in `QueryForIds` and optimize key parsing logic." />
    <MESSAGE value="Add comprehensive tests for numeric type endianness and lexicographical sorting; refine `QueryForIds` logic by removing redundant timestamp checks and optimizing index lookups" />
    <MESSAGE value="Add `FetchEventBySerial` method and enhance event querying logic in `QueryEvents` to support ID-based searches and reverse chronological sorting." />
    <MESSAGE value="Add comprehensive tests for event querying and serial-based lookup methods (`FetchEventBySerial`, `QueryForSerials`, `GetSerialById`, `GetSerialsByRange`) to ensure correctness and improve coverage." />
    <MESSAGE value="Integrate logging across multiple components (`database`, `socketapi`, `envelopes`) to improve debugging and traceability; implement `HandleReq` and `HandleClose` in `socketapi`." />
    <MESSAGE value="Enhance `HandleReq` in `socketapi`: implement filter completion logic, reverse-sort events by creation time, and log subscription details." />
    <MESSAGE value="Refine `GetSerialsByRange`, optimize `GetIndexesFromFilter`, and update `QueryEvents` with limit checks and enhanced sorting." />
    <MESSAGE value="Fix off-by-one error in `GetIndexesFromFilter` range logic." />
    <MESSAGE value="Remove redundant error handling in `GetIndexesFromFilter` and related tests." />
    <MESSAGE value="Handle `#` prefixed tag keys in `GetIndexesFromFilter` and improve limit validation in `HandleReq`." />
    <MESSAGE value="Update index naming conventions for clarity and consistency&#10;&#10;- **database/get-indexes-from-filter.go**: Rename various indexes (`KindPubkeyTag` → `TagKindPubkey`, `KindTag` → `TagKind`, `PubkeyTag` → `TagPubkey`) for improved clarity and consistency; update corresponding logic.&#10;- **database/indexes/keys.go**: Modify index keys and constants to reflect new naming convention; adjust encoding/decoding functions correspondingly.&#10;- **database/get-indexes-for-event.go**: Align index references to updated names and handle related encoding changes.&#10;- **database/get-indexes-for-event_test.go**: Update test cases to reflect renamed indexes (`TagPubkey`, `TagKind`, `TagKindPubkey`) and validate correctness.&#10;- **database/get-indexes-from-filter_test.go**: Adjust test logic to verify renamed indexes and ensure proper filter behavior." />
    <MESSAGE value="Update index argument ordering and naming for consistency&#10;&#10;- **database/get-indexes-from-filter.go**: Reorder arguments in index-related calls to align with the new conventions and improve readability.&#10;- **database/get-fullidpubkey-by-serial.go**: Rename `IdPubkey` to `FullIdPubkey` and update related functions (`Enc/Dec/Vars`) to reflect the new naming pattern.&#10;- **database/indexes/keys.go**: Adjust encoding/decoding function signatures and constants in line with the reordered argument structure for various indexes (`TagKind`, `TagPubkey`, `TagKindPubkey`).&#10;- **database/get-indexes-for-event.go**: Update references to reordered and renamed index functions; apply changes across the logic for clarity.&#10;- **database/get-indexes-for-event_test.go**: Modify test cases to reflect argument reordering and new function names for consistency.&#10;- **database/get-indexes-from-filter_test.go**: Adjust expected results in tests to align with reordered arguments and validate correctness.&#10;- **database/indexes/keys_test.go**: Revise unit tests to use the updated function signatures and naming conventions for all relevant indexes." />
    <MESSAGE value="Sort tags in `GetIndexesFromFilter` for consistent iteration order&#10;&#10;- **database/get-indexes-from-filter.go**: Add sorting logic for tags to ensure reverse iteration order; reintroduce `KindPubkey` index handling at the correct position.&#10;- **general logic**: Standardize and improve index type comments for clarity (`tc-`, `kc-`, `pc-`, etc.)." />
    <MESSAGE value="Update `QueryEvents` for tag-based intersection and optimize `HandleReq`&#10;&#10;- **database/query-events.go**: Add logic to handle tag-based intersections in `QueryEvents`, ensuring precise filtering of results by intersecting IDs from multiple tags.&#10;- **socketapi/handleReq.go**: Remove redundant logging and refine the `f.Limit` handling to improve performance." />
    <MESSAGE value="Refactor event handling and improve error handling&#10;&#10;- **database/query-events.go**: Replace `return` statements with `continue` to ensure error scenarios do not interrupt the loop and allow processing of subsequent events.&#10;- **server/add-event.go**: Add support for logging ephemeral events and prevent saving them unnecessarily to optimize storage and improve traceability." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor event handling and improve error handling&#10;&#10;- **database/query-events.go**: Replace `return` statements with `continue` to ensure error scenarios do not interrupt the loop and allow processing of subsequent events.&#10;- **server/add-event.go**: Add support for logging ephemeral events and prevent saving them unnecessarily to optimize storage and improve traceability." />
    <option name="NON_MODAL_COMMIT_POSTPONE_SLOW_CHECKS" value="false" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>