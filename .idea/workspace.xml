<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="848aca24-a3ec-4e50-a3d5-7b132d168000" name="Changes" comment="Add comprehensive tests for event querying and serial-based lookup methods (`FetchEventBySerial`, `QueryForSerials`, `GetSerialById`, `GetSerialsByRange`) to ensure correctness and improve coverage.">
      <change afterPath="$PROJECT_DIR$/socketapi/handleClose.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/socketapi/handleReq.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/database.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/database.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/get-serial-by-id.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/get-serial-by-id.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/query-events.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/query-events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/envelopes/eoseenvelope/eoseenvelope.go" beforeDir="false" afterPath="$PROJECT_DIR$/envelopes/eoseenvelope/eoseenvelope.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/add-event.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/add-event.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/socketapi/handleMessage.go" beforeDir="false" afterPath="$PROJECT_DIR$/socketapi/handleMessage.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
      <option value="repository" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.24.4" />
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoVcsConfiguration">
    <option name="GO_FMT" value="false" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2zNVfvqcHFFZtiw7fVA42Kf3QlH" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build github.com/mleku/realy.lol.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build not.realy.lol.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build orly.dev/event/examples/filter.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build sample.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestFromCanonical in orly.dev/event.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGenerateIndexes in not.realy.lol/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetIndexesForEvent in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetIndexesForEvent/BasicEvent in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetIndexesFromFilter in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForAuthorsTags in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForCreatedAt in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForIds in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForKinds in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForKindsAuthors in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForKindsAuthorsTags in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForKindsTags in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestQueryForTags in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestSaveEvents in orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestT in not.realy.lol/database/indexes/types.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestTMarshalBinary_UnmarshalBinary in orly.dev/event.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test not.realy.lol/database/indexes.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test not.realy.lol/database/indexes/types.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test orly.dev/database.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test orly.dev/database/indexes.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test orly.dev/event.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.gobench not.realy.lol/codecbuf.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.GoLinterPluginOnboarding&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.GoLinterPluginStorageMigration&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;SHELLCHECK.PATH&quot;: &quot;/home/david/.local/share/JetBrains/GoLand2025.1/Shell Script/shellcheck&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/david/src/orly.dev&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/database" />
      <recent name="$PROJECT_DIR$/server" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/interfaces" />
      <recent name="$PROJECT_DIR$/database" />
      <recent name="$PROJECT_DIR$/socketapi" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/interfaces" />
      <recent name="$PROJECT_DIR$/event/examples" />
      <recent name="$PROJECT_DIR$/event/examples/filter" />
      <recent name="$PROJECT_DIR$/database/indexes/types" />
      <recent name="$PROJECT_DIR$/database" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test orly.dev/database">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestQueryForAuthorsTags in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestQueryForAuthorsTags\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestQueryForCreatedAt in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestQueryForCreatedAt\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestQueryForIds in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestQueryForIds\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSaveEvents in orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSaveEvents\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test orly.dev/database" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="orly.dev" />
      <working_directory value="$PROJECT_DIR$/database" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="orly.dev/database" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test orly.dev/database" />
        <item itemvalue="Go Test.TestQueryForAuthorsTags in orly.dev/database" />
        <item itemvalue="Go Test.TestSaveEvents in orly.dev/database" />
        <item itemvalue="Go Test.TestQueryForCreatedAt in orly.dev/database" />
        <item itemvalue="Go Test.TestQueryForIds in orly.dev/database" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-3b128438d3f6-07d2d2d66b1e-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-251.26927.50" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="848aca24-a3ec-4e50-a3d5-7b132d168000" name="Changes" comment="" />
      <created>1751571624698</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751571624698</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="starting with database stuff" />
    <MESSAGE value="add indexes codecs and stubs for store interface methods" />
    <MESSAGE value="introduce codecbuf package with a concurrent-safe bytes buffer pool and comprehensive tests" />
    <MESSAGE value="tests for all codecs, index generation function and tests&#10;&#10;also use codecbuf pool for all the things" />
    <MESSAGE value="refactor GenerateIndexes to use named return values" />
    <MESSAGE value="implement AddEvent and QueryForIds functionality in server and database, refactor event save logic" />
    <MESSAGE value="remove unused letter package, rename and refactor core types, update filters and test logic" />
    <MESSAGE value="move to new orly.dev; implement indexes properly" />
    <MESSAGE value="update project name to &quot;orly.dev&quot; and add initial README for the nostr relay" />
    <MESSAGE value="update more orly stuff, make json codec handle whitespace, fix indexes" />
    <MESSAGE value="complete set of indexes, log data size of data stored vs size of received event" />
    <MESSAGE value="remove all indexes that don't end in a timestamp" />
    <MESSAGE value="handle `Until` filter in `GetIndexesFromFilter` and update tests" />
    <MESSAGE value="migrate `codec` package to `interfaces/codec` and update imports across the project" />
    <MESSAGE value="refactor `GetIndexesFromFilter` and related index encodings to simplify serialization logic; add comprehensive event index tests" />
    <MESSAGE value="change filter indexes to be pairs with created_at ranges" />
    <MESSAGE value="partly implemented query for ids" />
    <MESSAGE value="log event processing duration and throughput in save-event test" />
    <MESSAGE value="added comprehensive tests for QueryForIds" />
    <MESSAGE value="Ensure data directory creation in `database.go` using `os.MkdirAll` and `apputil.EnsureDir`." />
    <MESSAGE value="Refactor `QueryForIds`: migrate to `IdPkTs` struct, improve timestamp filtering, and optimize index lookups." />
    <MESSAGE value="Improve timestamp filtering in `QueryForIds` and optimize key parsing logic." />
    <MESSAGE value="Add comprehensive tests for numeric type endianness and lexicographical sorting; refine `QueryForIds` logic by removing redundant timestamp checks and optimizing index lookups" />
    <MESSAGE value="Add `FetchEventBySerial` method and enhance event querying logic in `QueryEvents` to support ID-based searches and reverse chronological sorting." />
    <MESSAGE value="Add comprehensive tests for event querying and serial-based lookup methods (`FetchEventBySerial`, `QueryForSerials`, `GetSerialById`, `GetSerialsByRange`) to ensure correctness and improve coverage." />
    <option name="LAST_COMMIT_MESSAGE" value="Add comprehensive tests for event querying and serial-based lookup methods (`FetchEventBySerial`, `QueryForSerials`, `GetSerialById`, `GetSerialsByRange`) to ensure correctness and improve coverage." />
    <option name="NON_MODAL_COMMIT_POSTPONE_SLOW_CHECKS" value="false" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>